{"version":3,"sources":["redux/example/exampleTypes.tsx","redux/example/exampleReducer.tsx","redux/rootReducer.tsx","redux/store.tsx","components/Example/Example.tsx","redux/example/exampleActions.tsx","components/ReduxExample/ReduxExample.tsx","components/Main/Main.tsx","context.ts","components/Modal/Modal.tsx","App.tsx","components/Modal/ModalTestComponent.tsx","reportWebVitals.ts","index.tsx"],"names":["ADD_NUMBER","initialState","defaultNumber","exampleReducer","state","action","type","payload","rootReducer","combineReducers","example","store","createStore","composeWithDevTools","applyMiddleware","logger","thunk","Example","text","useState","counter","setCounter","className","onClick","addNumber","number","ReduxExample","useSelector","dispatch","useDispatch","Main","ModalContext","React","createContext","Modal","useContext","Component","elementContextValue","App","Provider","value","exact","path","to","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iSAAaA,EAAa,aCMpBC,EAA8B,CAClCC,cAAe,IAkBFC,EAZQ,WAA2D,IAA1DC,EAAyD,uDAAjDH,EAAcI,EAAmC,uCAC/E,OAAQA,EAAOC,MACb,KAAKN,EACH,OAAO,2BACFI,GADL,IAEEF,cAAeE,EAAMF,cAAgBG,EAAOE,UAEhD,QACE,OAAOH,ICdEI,EAJKC,0BAAgB,CAClCC,QAASP,ICEEQ,EAAQC,sBAAYJ,EAAaK,8BAAoBC,0BAAgBC,IAAQC,O,eCA7EC,EAA2B,SAAC,GAAiC,IAAD,IAA9BC,YAA8B,MAAvB,UAAuB,IACzCC,mBAAiB,GADwB,mBAChEC,EADgE,KACvDC,EADuD,KAEvE,OACE,sBAAKC,UAAU,UAAf,UACGJ,EADH,MACYE,EACV,wBAAQG,QAAS,kBAAMF,EAAWD,EAAU,IAAIE,UAAU,kBAA1D,gBAGA,wBAAQC,QAAS,kBAAMF,EAAWD,EAAU,IAAIE,UAAU,kBAA1D,oBCPOE,EAAY,WAAmC,IAAlCC,EAAiC,uDAAxB,EACjC,MAAO,CACLnB,KAAMN,EACNO,QAASkB,ICPAC,EAAyB,WACpC,IAAMxB,EAAgByB,aAAY,SAACvB,GAAD,OAA2BA,EAAMM,QAAQR,iBACrE0B,EAAWC,cACjB,OACE,gCACE,4CAAe3B,KACf,wBAAQqB,QAAS,kBAAMK,EAASJ,MAAhC,wBACA,wBAAQD,QAAS,kBAAMK,EAASJ,EAAU,KAA1C,uBCPOM,EAAiB,WAC5B,OACE,sBAAKR,UAAU,OAAf,UACE,cAAC,EAAD,CAASJ,KAAM,+CACf,cAAC,EAAD,IACA,cAAC,EAAD,QCNOa,G,MAAeC,IAAMC,cAAc,KCMnCC,EAAkB,WAAM,MAIPC,qBAAWJ,GAA/BK,EAJ2B,EAI3BA,UAAW9B,EAJgB,EAIhBA,KAGnB,OACE,sBAAKgB,UAAU,kBAAf,UACE,cAACc,EAAD,IACA,4BAAI9B,QCJG+B,G,YAAsB,CACjCD,UCb0C,kBAC1C,8BACE,wMDYF9B,KAAM,UAGKgC,EAAgB,WAC3B,OACE,eAAC,IAAD,CAAU3B,MAAOA,EAAjB,UACE,cAACoB,EAAaQ,SAAd,CAAuBC,MAAOH,EAA9B,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOI,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,UACE,cAAC,IAAD,CAAUC,GAAG,iBEjBVC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1Bb,M","file":"static/js/main.54d76fb5.chunk.js","sourcesContent":["export const ADD_NUMBER = 'ADD_NUMBER';\n","import { ADD_NUMBER } from './exampleTypes';\n\ninterface IInitialState {\n  defaultNumber: number;\n}\n\nconst initialState: IInitialState = {\n  defaultNumber: 10,\n};\ninterface IAction {\n  type: string;\n  payload: number;\n}\nconst exampleReducer = (state = initialState, action: IAction): IInitialState => {\n  switch (action.type) {\n    case ADD_NUMBER:\n      return {\n        ...state,\n        defaultNumber: state.defaultNumber + action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default exampleReducer;\n","import { combineReducers } from 'redux';\nimport exampleReducer from './example/exampleReducer';\n\nconst rootReducer = combineReducers({\n  example: exampleReducer,\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport logger from 'redux-logger';\nimport rootReducer from './rootReducer';\n\nexport const store = createStore(rootReducer, composeWithDevTools(applyMiddleware(logger, thunk)));\n","import { useState } from 'react';\n\ninterface Props {\n  text?: string;\n}\n\nexport const Example: React.FC<Props> = ({ text = 'Counter' }: Props) => {\n  const [counter, setCounter] = useState<number>(0);\n  return (\n    <div className=\"example\">\n      {text} - {counter}\n      <button onClick={() => setCounter(counter + 1)} className=\"example__button\">\n        +1\n      </button>\n      <button onClick={() => setCounter(counter - 1)} className=\"example__button\">\n        -1\n      </button>\n    </div>\n  );\n};\n","import { ADD_NUMBER } from './exampleTypes';\n\ninterface IAddNumberAction {\n  type: typeof ADD_NUMBER;\n  payload: number;\n}\n\nexport const addNumber = (number = 1): IAddNumberAction => {\n  return {\n    type: ADD_NUMBER,\n    payload: number,\n  };\n};\n","import { RootStateOrAny, useSelector, useDispatch } from 'react-redux';\nimport { addNumber } from 'src/redux';\n\nexport const ReduxExample: React.FC = () => {\n  const defaultNumber = useSelector((state: RootStateOrAny) => state.example.defaultNumber);\n  const dispatch = useDispatch();\n  return (\n    <div>\n      <div>Number - {defaultNumber}</div>\n      <button onClick={() => dispatch(addNumber())}>Add number</button>\n      <button onClick={() => dispatch(addNumber(5))}>Add 5</button>\n    </div>\n  );\n};\n","import { Example } from '../Example/Example';\nimport { ReduxExample } from '../ReduxExample/ReduxExample';\n\nexport const Main: React.FC = () => {\n  return (\n    <div className=\"main\">\n      <Example text={'Счетчик'} />\n      <Example />\n      <ReduxExample />\n    </div>\n  );\n};\n","import React from 'react';\r\n\r\nexport const ModalContext = React.createContext({});\r\n","import './Modal.scss';\r\n\r\nimport React, { useContext } from 'react';\r\n\r\nimport { ModalContext } from '../../context';\r\n\r\nimport { elementContextValue } from '../../App';\r\n\r\nexport const Modal: React.FC = () => {\r\n  // interface IContext {\r\n  //   Component?: any; // пробовал и ReactNode и React.FC и React.Component и JSX.Element - ничего не работает.\r\n  // }\r\n  const { Component, type } = useContext(ModalContext) as typeof elementContextValue; // изначально тут не было as typeof elementContextValue\r\n  // и я пытался писать const { Component } : IContext, но всплывала ошибка\r\n  // Тип элемента JSX \"Component\" не имеет конструкций или сигнатур вызова.\r\n  return (\r\n    <div className=\"modal-container\">\r\n      <Component />\r\n      <p>{type}</p>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { store } from './redux/store';\nimport { Main } from './components/Main/Main';\nimport { Modal } from './components/Modal/Modal';\n\nimport { ModalTestComponent } from './components/Modal/ModalTestComponent'; // компонент для проверки работы Modal\n\nimport { ModalContext } from './context';\n\nimport 'antd/dist/antd.css';\nimport './scss/App.scss';\n\nexport const elementContextValue = {\n  Component: ModalTestComponent,\n  type: 'alert',\n};\n\nexport const App: React.FC = () => {\n  return (\n    <Provider store={store}>\n      <ModalContext.Provider value={elementContextValue}>\n        <Modal />\n      </ModalContext.Provider>\n      <Router>\n        <Switch>\n          <Route exact path=\"/\">\n            <Main />\n          </Route>\n          <Route>\n            <Redirect to=\"/\" />\n          </Route>\n        </Switch>\n      </Router>\n    </Provider>\n  );\n};\n","import React from 'react';\r\n\r\nexport const ModalTestComponent: React.FC = () => (\r\n  <div>\r\n    <p>Переданный тестовый компонент</p>\r\n  </div>\r\n);\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './scss/default.scss';\nimport { App } from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}